" vim:set ft=vim:
color railscasts
set t_Co=256
set number
set smartcase
set undodir=~/.undo

set cursorline

let g:use_cursor_shapes=1

autocmd BufRead,BufNewFile *.md setlocal textwidth=80
autocmd BufRead,BufNewFile *.md setlocal spell

map <leader>p :bufdo g/binding\.pry/d \| update<CR>
iabbrev *** puts ?**80<CR>puts<CR>puts ?**80

" spelling and completion
autocmd BufWrite spellfile.en.add silent mkspell! %
set spellfile=~/code/dotfiles/data/spellfile.en.add
set dictionary=~/code/dotfiles/data/spellfile.en.add
set complete-=k complete+=k

" load local plugins
if exists('g:loaded_pathogen')
  execute pathogen#infect('~/code/vim-plugins/{}')
endif

map <leader>f :call fzf#run(fzf#wrap('options': '--reverse'}))<CR>
map <leader>g :call fzf#run(fzf#wrap({'source': 'git ls-files', 'options': '--reverse'}))<CR>

function! TryAgain()
  let format = '"active=#{window_active} #{session_name}:#{window_index}.0"'
  let target = system('tmux list-windows -F '.format.' | grep "active=1" | cut -d " " -f 2 | tr -d "\n"')
  let command = 'tmux send-keys -t '.target.' C-p C-j'
  call system(command)
endfunction

map <leader>r :call TryAgain()<CR>

let g:ale_fixers = {'javascript': ['eslint']}
let g:ale_fix_on_save = 1
let g:ale_sign_column_always = 1
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
let g:ale_open_list = 1

let g:jsx_ext_required = 0
